<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-autowire="byName" default-lazy-init="true">

	<description>Spring-DB</description>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/mysql.properties</value>
				<value>classpath:conf/redis.properties</value>
			</list>
		</property>
	</bean>

	<context:component-scan
		base-package="com.xmm.shoptools.backend.service,com.xmm.shoptools.backend.dao">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="initialSize" value="${mysql.jdbc.initialSize}" />
		<property name="maxIdle" value="${mysql.jdbc.maxIdle}" />
		<property name="minIdle" value="${mysql.jdbc.minIdle}" />
		<property name="maxActive" value="${mysql.jdbc.maxActive}" />
		<property name="removeAbandoned" value="${mysql.jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${mysql.jdbc.removeAbandonedTimeout}" />
		<property name="maxWait" value="${mysql.jdbc.maxWait}" />
		<property name="validationQuery">
			<value>${mysql.jdbc.validationQuery}</value>
		</property>
		<property name="testOnBorrow">
			<value>${mysql.jdbc.testOnBorrow}</value>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:spring/dao/mapper/*.xml" />
		<property name="configLocation" value="classpath:spring/dao/mybatis.xml" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明使用注解式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- redis连接池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- redis工厂类 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.ip}" p:port="${redis.port}" p:password="${redis.password}"
		p:use-pool="${redis.use-pool}">
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- redis模版类 -->
	<!-- scope="prototype" -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
		<property name="KeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="ValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
	</bean>


</beans>